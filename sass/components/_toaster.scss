/* ==============================================================================================
 * TOASTER
 * ============================================================================================== */

.c-toaster {
	position: fixed;
	bottom: $toastScreenOffset;
	left: calc(50% - (#{$toastWidth} / 2));
	width: 0;
	height: 0;
	z-index: map_get($zIndexes, "toaster");
}

.c-toaster__toast {
	display: block;
	position: absolute;
	bottom: 0;
	left: 0;
	padding: $toastPadding;
	width: $toastWidth;
	background: $toastBackground;
	border-radius: $toastBorderRadius;
	color: $toastColor;
	line-height: getLineHeight("title");
	text-align: center;
	visibility: hidden;
	opacity: 0;
	transition: all $toastTransitionDuration $toastTransitionTimingFunction;
}

.c-toaster__toast.is-cooked {
	visibility: visible;
	opacity: 1;
	transform: translate3d(0, 0, 0);
	transition: all $toastTransitionDuration $toastTransitionTimingFunction;
}



/* Close button
   --------------------------- */

.c-toaster__toastCloseButton {
	position: absolute;
	top: ($globalSpacingXxs / 2);
	right: ($globalSpacingXxs / 2);
	opacity: .8;
	cursor: pointer;

	&:hover {
		opacity: 1;
	}
}

.c-toaster__toastCloseButton:before {
	content: "\00d7";
}




/* Position
   ============================================================================================== */

.c-toaster--right {
	right: $toastScreenOffset;
	left: auto;
}

.c-toaster--right .c-toaster__toast {
	right: 0;
	left: auto;
}

.c-toaster--left {
	left: $toastScreenOffset;
}

.c-toaster--top {
	top: $toastScreenOffset;
	bottom: auto;
}

.c-toaster--top .c-toaster__toast {
	top: 0;
	bottom: auto;
}




/* Stacked
   ============================================================================================== */

.c-toaster--stacked {
	width: auto;
	height: auto;
}

.c-toaster--stacked .c-toaster__toast {
	position: relative;
	top: auto;
	right: auto;
	bottom: auto;
	left: auto;
	margin-bottom: $toastScreenOffset;

	&:last-child {
		margin-bottom: 0;
	}
}
